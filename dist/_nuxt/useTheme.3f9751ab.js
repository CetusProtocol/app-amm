var $=Object.defineProperty;var z=(l,h,e)=>h in l?$(l,h,{enumerable:!0,configurable:!0,writable:!0,value:e}):l[h]=e;var r=(l,h,e)=>(z(l,typeof h!="symbol"?h+"":h,e),e);import{ah as f,ai as s,aj as C,ak as _,al as F,am as I,an as c,ao as v,ap as y,aq as m,ar as A,as as E,at as G,au as x,X as q,e as R,b as U,av as J,af as O,f as Q,r as P,aw as V,$ as X,a7 as w}from"./entry.50c95865.js";import{S as Y}from"./index.ea2c9d3e.js";const Z="Petra";class tt extends f{constructor({timeout:e=1e4}={}){super();r(this,"name",Z);r(this,"url","https://chrome.google.com/webstore/detail/petra-aptos-wallet/ejjladinnckdgjemekebdpeokbikhfci");r(this,"icon","https://raw.githubusercontent.com/hippospace/aptos-wallet-adapter/main/logos/petra.png");r(this,"_provider");r(this,"_network");r(this,"_chainId");r(this,"_api");r(this,"_timeout");r(this,"_readyState",typeof window>"u"||typeof document>"u"?s.Unsupported:s.NotDetected);r(this,"_connecting");r(this,"_wallet");this._provider=typeof window<"u"?window.aptos:void 0,this._network=void 0,this._timeout=e,this._connecting=!1,this._wallet=null,typeof window<"u"&&this._readyState!==s.Unsupported&&C(()=>window.aptos?(this._readyState=s.Installed,this.emit("readyStateChange",this._readyState),!0):!1)}get publicAccount(){var e,t,n;return{publicKey:((e=this._wallet)==null?void 0:e.publicKey)||null,address:((t=this._wallet)==null?void 0:t.address)||null,authKey:((n=this._wallet)==null?void 0:n.authKey)||null}}get network(){return{name:this._network,api:this._api,chainId:this._chainId}}get connecting(){return this._connecting}get connected(){var e;return!!((e=this._wallet)!=null&&e.isConnected)}get readyState(){return this._readyState}async connect(){try{if(this.connected||this.connecting)return;if(!(this._readyState===s.Loadable||this._readyState===s.Installed))throw new _;this._connecting=!0;const e=this._provider||window.aptos,t=await(e==null?void 0:e.connect());this._wallet={address:t==null?void 0:t.address,publicKey:t==null?void 0:t.publicKey,isConnected:!0};try{const n=await(e==null?void 0:e.network()),a=null,o=null;this._network=n,this._chainId=a,this._api=o}catch(n){const a=n.message;throw this.emit("error",new F(a)),n}this.emit("connect",this._wallet.publicKey)}catch(e){throw this.emit("error",e),e}finally{this._connecting=!1}}async disconnect(){const e=this._wallet,t=this._provider||window.aptos;if(e){this._wallet=null;try{await(t==null?void 0:t.disconnect())}catch(n){this.emit("error",new I(n==null?void 0:n.message,n))}}this.emit("disconnect")}async signTransaction(e,t){try{const n=this._wallet,a=this._provider||window.aptos;if(!n||!a)throw new c;const o=await a.signTransaction(e,t);if(o.code)throw new Error(o.message);return o}catch(n){const a=n.message;throw this.emit("error",new v(a)),n}}async signAndSubmitTransaction(e,t){try{const n=this._wallet,a=this._provider||window.aptos;if(!n||!a)throw new c;const o=await a.signAndSubmitTransaction(e,t);if(o.code)throw new Error(o.message);return o}catch(n){const a=n.message;throw this.emit("error",new y(a)),n}}async signMessage(e){try{const t=this._wallet,n=this._provider||window.aptos;if(!t||!n)throw new c;if(typeof e!="object"||!e.nonce)throw new m("Invalid signMessage Payload");const a=await(n==null?void 0:n.signMessage(e));if(a)return a;throw new Error("Sign Message failed")}catch(t){const n=t.message;throw this.emit("error",new m(n)),t}}async onAccountChange(){try{const e=this._wallet,t=this._provider||window.aptos;if(!e||!t)throw new c;const n=async a=>{var o,i,d,g,T,M;if(a!=null&&a.publicKey)this._wallet={...this._wallet,publicKey:a.publicKey||((o=this._wallet)==null?void 0:o.publicKey),authKey:a.authKey||((i=this._wallet)==null?void 0:i.authKey),address:a.address||((d=this._wallet)==null?void 0:d.address)};else{const u=await(t==null?void 0:t.connect());this._wallet={...this._wallet,authKey:(u==null?void 0:u.authKey)||((g=this._wallet)==null?void 0:g.authKey),address:(u==null?void 0:u.address)||((T=this._wallet)==null?void 0:T.address),publicKey:(u==null?void 0:u.publicKey)||((M=this._wallet)==null?void 0:M.publicKey)}}this.emit("accountChange",a.publicKey)};await(t==null?void 0:t.onAccountChange(n))}catch(e){const t=e.message;throw this.emit("error",new A(t)),e}}async onNetworkChange(){try{const e=this._wallet,t=this._provider||window.aptos;if(!e||!t)throw new c;const n=async a=>{this._network=a.networkName,this.emit("networkChange",this._network)};t==null||t.onNetworkChange(n)}catch(e){const t=e.message;throw this.emit("error",new E(t)),e}}}const et="Hippo";class nt extends f{constructor({timeout:e=1e4}={}){super();r(this,"name",et);r(this,"url","https://github.com/hippospace/hippo-wallet");r(this,"icon","https://ui-test1-22e7c.web.app/static/media/hippo_logo.ecded6bf411652de9b7f.png");r(this,"_provider");r(this,"_timeout");r(this,"_readyState",typeof window>"u"||typeof document>"u"?s.Unsupported:s.NotDetected);r(this,"_connecting");r(this,"_wallet");this._provider=typeof window<"u"?window.hippoWallet:void 0,this._timeout=e,this._connecting=!1,this._wallet=null,typeof window<"u"&&this._readyState!==s.Unsupported&&C(()=>window.hippoWallet?(this._readyState=s.Installed,this.emit("readyStateChange",this._readyState),!0):!1)}get publicAccount(){var e,t,n;return{publicKey:((e=this._wallet)==null?void 0:e.publicKey)||null,address:((t=this._wallet)==null?void 0:t.address)||null,authKey:((n=this._wallet)==null?void 0:n.authKey)||null}}get connecting(){return this._connecting}get connected(){var e;return!!((e=this._wallet)!=null&&e.isConnected)}get readyState(){return this._readyState}async connect(){try{if(this.connected||this.connecting)return;if(!(this._readyState===s.Loadable||this._readyState===s.Installed))throw new _;this._connecting=!0;const e=this._provider||window.hippoWallet,t=await(e==null?void 0:e.connect());this._wallet={...t,isConnected:!0},this.emit("connect",this._wallet.publicKey)}catch(e){throw this.emit("error",e),e}finally{this._connecting=!1}}async disconnect(){if(this._wallet){this._wallet=null;try{const t=this._provider||window.hippoWallet;await(t==null?void 0:t.disconnect())}catch(t){this.emit("error",new I(t==null?void 0:t.message,t))}}this.emit("disconnect")}async signTransaction(e){try{if(!this._wallet)throw new c;try{const n=this._provider||window.hippoWallet,a=await(n==null?void 0:n.signTransaction(e));if(a)return a;throw new Error("Transaction failed")}catch(n){throw new v(n==null?void 0:n.message,n)}}catch(t){throw this.emit("error",t),t}}async signAndSubmitTransaction(e){try{if(!this._wallet)throw new c;try{const n=this._provider||window.hippoWallet,a=await(n==null?void 0:n.signAndSubmitTransaction(e));if(a)return a.detail.hash;throw new Error("Transaction failed")}catch(n){throw new y(n.message||n)}}catch(t){throw this.emit("error",t),t}}async signMessage(e){try{const t=this._wallet,n=this._provider||window.hippoWallet;if(!t||!n)throw new c;const a=await(n==null?void 0:n.signMessage(e));if(a)return a;throw new Error("Sign Message failed")}catch(t){const n=t.message;throw this.emit("error",new m(n)),t}}}const K="https://hippo-wallet-test.web.app",at="Hippo Web";class ot extends f{constructor({timeout:e=1e4}={}){super();r(this,"name",at);r(this,"url","https://hippo-wallet-test.web.app");r(this,"icon","https://ui-test1-22e7c.web.app/static/media/hippo_logo.ecded6bf411652de9b7f.png");r(this,"_provider");r(this,"_timeout");r(this,"_readyState",s.Installed);r(this,"_connecting");r(this,"_wallet");r(this,"handleMessage",e=>{var t;e.origin===this._provider&&(e.data.method==="account"?(this._wallet={connected:!0,publicKey:e.data.publicKey||null,address:e.data.address||null,authKey:e.data.authKey||null},this.emit("connect",this._wallet)):e.data.method==="success"?this.emit("success",(t=e.data.detail)==null?void 0:t.hash):e.data.method==="fail"?this.emit("error",new y(e.data.error)):e.data.method==="disconnected"&&this.disconnect())});r(this,"_beforeUnload",()=>{this.disconnect()});this._provider=K,this._timeout=e,this._connecting=!1,this._wallet=null,this._readyState=s.Installed}get publicAccount(){var e,t,n;return{publicKey:((e=this._wallet)==null?void 0:e.publicKey)||null,address:((t=this._wallet)==null?void 0:t.address)||null,authKey:((n=this._wallet)==null?void 0:n.authKey)||null}}get connecting(){return this._connecting}get connected(){var e;return!!((e=this._wallet)!=null&&e.connected)}get readyState(){return this._readyState}async connect(){try{if(this.connected||this.connecting)return;if(!(this._readyState===s.Loadable||this._readyState===s.Installed))throw new _;this._connecting=!0,window.addEventListener("message",this.handleMessage),window.addEventListener("beforeunload",this._beforeUnload)}catch(e){throw this.emit("error",e),e}finally{this._connecting=!1}}async disconnect(){window.removeEventListener("message",this.handleMessage),window.removeEventListener("beforeunload",this._beforeUnload),this._wallet=null,this.emit("disconnect")}async signTransaction(e){try{const t=new URLSearchParams({request:JSON.stringify({method:"signTransaction",payload:e}),origin:window.location.origin,isPopUp:"true"}).toString();if(!window.open(`${K}?${t}`,"Transaction Confirmation","scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=440,height=700"))throw new c;return await new Promise((o,i)=>{this.once("success",o),this.once("error",i)})}catch(t){throw this.emit("error",t),t}}async signAndSubmitTransaction(e){try{const t=new URLSearchParams({request:JSON.stringify({method:"signAndSubmit",payload:e}),origin:window.location.origin}).toString();if(!window.open(`${K}?${t}`,"Transaction Confirmation","scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=440,height=700"))throw new c;return await new Promise((o,i)=>{this.once("success",o),this.once("error",i)})}catch(t){throw this.emit("error",t),t}}async signMessage(e){try{const t=new URLSearchParams({request:JSON.stringify({method:"signMessage",payload:e}),origin:window.location.origin}).toString();if(!window.open(`${K}?${t}`,"Transaction Confirmation","scrollbars=no,resizable=no,status=no,location=no,toolbar=no,menubar=no,width=440,height=700"))throw new c;return await new Promise((o,i)=>{this.once("success",o),this.once("error",i)})}catch(t){throw this.emit("error",t),t}}}const rt="Martian";class st extends f{constructor({timeout:e=1e4}={}){super();r(this,"name",rt);r(this,"url","https://chrome.google.com/webstore/detail/martian-wallet/efbglgofoippbgcjepnhiblaibcnclgk");r(this,"icon","https://raw.githubusercontent.com/hippospace/aptos-wallet-adapter/main/logos/martian.png");r(this,"_provider");r(this,"_network");r(this,"_chainId");r(this,"_api");r(this,"_timeout");r(this,"_readyState",typeof window>"u"||typeof document>"u"?s.Unsupported:s.NotDetected);r(this,"_connecting");r(this,"_wallet");this._provider=typeof window<"u"?window.martian:void 0,this._network=void 0,this._timeout=e,this._connecting=!1,this._wallet=null,typeof window<"u"&&this._readyState!==s.Unsupported&&C(()=>window.martian?(this._readyState=s.Installed,this.emit("readyStateChange",this._readyState),!0):!1)}get publicAccount(){var e,t,n;return{publicKey:((e=this._wallet)==null?void 0:e.publicKey)||null,address:((t=this._wallet)==null?void 0:t.address)||null,authKey:((n=this._wallet)==null?void 0:n.authKey)||null}}get network(){return{name:this._network,api:this._api,chainId:this._chainId}}get connecting(){return this._connecting}get connected(){var e;return!!((e=this._wallet)!=null&&e.isConnected)}get readyState(){return this._readyState}async connect(){var e;try{if(this.connected||this.connecting)return;if(!(this._readyState===s.Loadable||this._readyState===s.Installed))throw new _;this._connecting=!0;const t=this._provider||window.martian;if(await(t==null?void 0:t.isConnected())&&await(t==null?void 0:t.disconnect()),!await(t==null?void 0:t.connect()))throw new c("No connect response");const o=await(t==null?void 0:t.account());if(o){this._wallet={...o,isConnected:!0};try{const i=await(t==null?void 0:t.network()),{chainId:d}=await(t==null?void 0:t.getChainId())||{chainId:""},g=null;this._network=i,this._chainId=d.toString(),this._api=g}catch(i){const d=i.message;throw this.emit("error",new F(d)),i}}this.emit("connect",((e=this._wallet)==null?void 0:e.address)||"")}catch(t){throw this.emit("error",new Error(t)),t}finally{this._connecting=!1}}async disconnect(){const e=this._wallet,t=this._provider||window.martian;if(e){this._wallet=null;try{await(t==null?void 0:t.disconnect())}catch(n){this.emit("error",new I(n==null?void 0:n.message,n))}}this.emit("disconnect")}async signTransaction(e,t){try{const n=this._wallet,a=this._provider||window.martian;if(!n||!a)throw new c;const o=await a.generateTransaction(n.address||"",e,t);if(!o)throw new Error("Cannot generate transaction");const i=await(a==null?void 0:a.signTransaction(o));if(!i)throw new Error("No response");return i}catch(n){throw this.emit("error",new v(n)),n}}async signAndSubmitTransaction(e,t){try{const n=this._wallet,a=this._provider||window.martian;if(!n||!a)throw new c;const o=await a.generateTransaction(n.address||"",e,t);if(!o)throw new Error("Cannot generate transaction");const i=await(a==null?void 0:a.signAndSubmitTransaction(o));if(!i)throw new Error("No response");return{hash:i}}catch(n){throw this.emit("error",new y(n)),n}}async signMessage(e){try{const t=this._wallet,n=this._provider||window.martian;if(!t||!n)throw new c;if(typeof e!="object"||!e.nonce)throw new m("Invalid signMessage Payload");const a=await(n==null?void 0:n.signMessage(e));if(a)return a;throw new Error("Sign Message failed")}catch(t){const n=t.message;throw this.emit("error",new m(n)),t}}async onAccountChange(){try{const e=this._wallet,t=this._provider||window.martian;if(!e||!t)throw new c;const n=async a=>{const{publicKey:o}=await(t==null?void 0:t.account());this._wallet={...this._wallet,address:a,publicKey:o},this.emit("accountChange",a)};await(t==null?void 0:t.onAccountChange(n))}catch(e){const t=e.message;throw this.emit("error",new A(t)),e}}async onNetworkChange(){try{const e=this._wallet,t=this._provider||window.martian;if(!e||!t)throw new c;const n=async a=>{this._network=a,this.emit("networkChange",this._network)};await(t==null?void 0:t.onNetworkChange(n))}catch(e){const t=e.message;throw this.emit("error",new E(t)),e}}}const it="Fewcha";class ct extends f{constructor({timeout:e=1e4}={}){super();r(this,"name",it);r(this,"url","https://fewcha.app/");r(this,"icon","https://miro.medium.com/fit/c/176/176/1*a0WaY-q7gjCRiuryRG6TkQ.png");r(this,"_provider");r(this,"_network");r(this,"_chainId");r(this,"_api");r(this,"_timeout");r(this,"_readyState",typeof window>"u"||typeof document>"u"?s.Unsupported:s.NotDetected);r(this,"_connecting");r(this,"_wallet");this._network=void 0,this._provider=typeof window<"u"?new G().action:void 0,this._timeout=e,this._connecting=!1,this._wallet=null,typeof window<"u"&&this._readyState!==s.Unsupported&&C(()=>window.fewcha?(this._readyState=s.Installed,this.emit("readyStateChange",this._readyState),!0):!1)}get publicAccount(){var e,t,n;return{publicKey:((e=this._wallet)==null?void 0:e.publicKey)||null,address:((t=this._wallet)==null?void 0:t.address)||null,authKey:((n=this._wallet)==null?void 0:n.authKey)||null}}get network(){return{name:this._network,api:this._api,chainId:this._chainId}}get connecting(){return this._connecting}get connected(){var e;return!!((e=this._wallet)!=null&&e.connected)}get readyState(){return this._readyState}async connect(){try{if(this.connected||this.connecting)return;if(!(this._readyState===s.Loadable||this._readyState===s.Installed))throw new _;this._connecting=!0;const e=this._provider||window.fewcha,t=await e.isConnected();(t==null?void 0:t.data)===!0&&await e.disconnect();const n=await e.connect();if(n.status===401)throw new x("User has rejected the connection");if(n.status!==200)throw new x("Wallet connect issue");let a={...n.data};if(!a.publicKey){const o=await e.account();if(!o.data.publicKey)throw new x("Wallet connect issue",n.data);a={...o.data}}this._wallet={connected:!0,...a};try{const{data:o}=await(e==null?void 0:e.getNetwork()),i=null,d=null;this._network=o,this._chainId=i,this._api=d}catch(o){const i=o.message;throw this.emit("error",new F(i)),o}this.emit("connect",this._wallet.publicKey)}catch(e){throw this.emit("error",e),e}finally{this._connecting=!1}}async disconnect(){const e=this._provider||window.fewcha;if(e)try{if((await e.disconnect()).data===!0)this._provider=void 0,this._wallet=null;else throw new Error("Disconnect failed")}catch(t){throw this.emit("error",new I(t==null?void 0:t.message,t)),t}this.emit("disconnect")}async signTransaction(e,t){try{if(!this._wallet)throw new c;const a=this._provider||window.fewcha,o=await a.generateTransaction(e,t);if(!o)throw new Error("Cannot generate transaction");const i=await(a==null?void 0:a.signTransaction(o.data));if(!i||i.status!==200)throw new Error("No response");return i.data}catch(n){const a=n instanceof Error?n.message:n.response.data.message;throw this.emit("error",new v(a)),n}}async signAndSubmitTransaction(e,t){try{if(!this._wallet)throw new c;const a=this._provider||window.fewcha,o=await a.generateTransaction(e,t);if(!o)throw new Error("Cannot generate transaction");const i=await(a==null?void 0:a.signAndSubmitTransaction(o.data));if(i.status===401)throw new Error("User has rejected the transaction");if(i.status!==200)throw new Error("Transaction issue");return{hash:i.data}}catch(n){const a=n instanceof Error?n.message:n.response.data.message;throw this.emit("error",new y(a)),n}}async signMessage(e){try{const t=this._wallet,n=this._provider||window.fewcha;if(!t||!n)throw new c;const a=await(n==null?void 0:n.signMessage(e));if(a)return a.data;throw new Error("Sign Message failed")}catch(t){const n=t.message;throw this.emit("error",new m(n)),t}}async onAccountChange(){try{const e=this._wallet,t=this._provider||window.fewcha;if(!e||!t)throw new c}catch(e){const t=e.message;throw this.emit("error",new A(t)),e}}async onNetworkChange(){try{const e=this._wallet,t=this._provider||window.fewcha;if(!e||!t)throw new c}catch(e){const t=e.message;throw this.emit("error",new E(t)),e}}}const lt="Pontem";class ht extends f{constructor({timeout:e=1e4}={}){super();r(this,"name",lt);r(this,"url","https://chrome.google.com/webstore/detail/pontem-wallet/phkbamefinggmakgklpkljjmgibohnba");r(this,"icon","https://www.gitbook.com/cdn-cgi/image/width=20,height=20,fit=contain,dpr=2,format=auto/https%3A%2F%2F736486047-files.gitbook.io%2F~%2Ffiles%2Fv0%2Fb%2Fgitbook-legacy-files%2Fo%2Fspaces%252F-MVVJKmKQGx983dZy_jr%252Favatar-1619180126965.png%3Fgeneration%3D1619180127194239%26alt%3Dmedia");r(this,"_provider");r(this,"_network");r(this,"_chainId");r(this,"_api");r(this,"_timeout");r(this,"_readyState",typeof window>"u"||typeof document>"u"?s.Unsupported:s.NotDetected);r(this,"_connecting");r(this,"_wallet");this._provider=typeof window<"u"?window.pontem:void 0,this._network=void 0,this._timeout=e,this._connecting=!1,this._wallet=null,typeof window<"u"&&this._readyState!==s.Unsupported&&C(()=>window.pontem?(this._readyState=s.Installed,this.emit("readyStateChange",this._readyState),!0):!1)}get publicAccount(){var e,t,n;return{publicKey:((e=this._wallet)==null?void 0:e.publicKey)||null,address:((t=this._wallet)==null?void 0:t.address)||null,authKey:((n=this._wallet)==null?void 0:n.authKey)||null}}get network(){return{name:this._network,api:this._api,chainId:this._chainId}}get connecting(){return this._connecting}get connected(){var e;return!!((e=this._wallet)!=null&&e.isConnected)}get readyState(){return this._readyState}async connect(){var e;try{if(this.connected||this.connecting)return;if(!(this._readyState===s.Loadable||this._readyState===s.Installed))throw new _;this._connecting=!0;const t=this._provider||window.pontem;await(t==null?void 0:t.isConnected())&&await(t==null?void 0:t.disconnect());const a=await(t==null?void 0:t.connect());if(!a)throw new c("No connect response");const o=a.address,i=a.publicKey;if(o){this._wallet={address:o,publicKey:i,isConnected:!0};try{const d=await(t==null?void 0:t.network());this._network=d.name,this._chainId=d.chainId,this._api=d.api}catch(d){const g=d.message;throw this.emit("error",new F(g)),d}}this.emit("connect",((e=this._wallet)==null?void 0:e.address)||"")}catch(t){throw this.emit("error",new Error("User has rejected the connection")),t}finally{this._connecting=!1}}async disconnect(){const e=this._wallet,t=this._provider||window.pontem;if(e){this._wallet=null;try{await(t==null?void 0:t.disconnect())}catch(n){this.emit("error",new I(n==null?void 0:n.message,n))}}this.emit("disconnect")}async signTransaction(e,t){try{const n=this._wallet,a=this._provider||window.pontem;if(!n||!a)throw new c;return await(a==null?void 0:a.signTransaction(e,t))}catch(n){throw this.emit("error",new v(n)),n}}async signAndSubmitTransaction(e,t){try{const n=this._wallet,a=this._provider||window.pontem;if(!n||!a)throw new c;const o=await(a==null?void 0:a.signAndSubmit(e,t));if(!o||!o.success)throw new Error("No response");return{hash:o.result.hash}}catch(n){throw this.emit("error",new y(n.message)),n}}async signMessage(e){try{const t=this._wallet,n=this._provider||window.pontem;if(!t||!n)throw new c;const a=await(n==null?void 0:n.signMessage(e));if(a.success)return a.result;throw new Error("Sign Message failed")}catch(t){const n=t.message;throw this.emit("error",new m(n)),t}}async onAccountChange(){try{const e=this._wallet,t=this._provider||window.pontem;if(!e||!t)throw new c;const n=async a=>{if(a===void 0){this.connected&&await(t==null?void 0:t.disconnect());return}const o=await(t==null?void 0:t.publicKey());this._wallet={...this._wallet,address:a,publicKey:o},this.emit("accountChange",a)};await(t==null?void 0:t.onAccountChange(n))}catch(e){const t=e.message;throw this.emit("error",new A(t)),e}}async onNetworkChange(){try{const e=this._wallet,t=this._provider||window.pontem;if(!e||!t)throw new c;const n=a=>{this._network=a.name,this._api=a.api,this._chainId=a.chainId,this._network&&this.emit("networkChange",this._network)};await(t==null?void 0:t.onNetworkChange(n))}catch(e){const t=e.message;throw this.emit("error",new E(t)),e}}}const dt="Spika";class wt extends f{constructor({timeout:e=1e4}={}){super();r(this,"name",dt);r(this,"url","https://chrome.google.com/webstore/detail/spika/fadkojdgchhfkdkklllhcphknohbmjmb");r(this,"icon","https://spika.app/assets/logo_400_nb.png");r(this,"_provider");r(this,"_network");r(this,"_chainId");r(this,"_api");r(this,"_timeout");r(this,"_readyState",typeof window>"u"||typeof document>"u"?s.Unsupported:s.NotDetected);r(this,"_connecting");r(this,"_wallet");this._provider=typeof window<"u"?window.spika:void 0,this._network=void 0,this._timeout=e,this._connecting=!1,this._wallet=null,typeof window<"u"&&this._readyState!==s.Unsupported&&C(()=>window.spika?(this._readyState=s.Installed,this.emit("readyStateChange",this._readyState),!0):!1)}get publicAccount(){var e,t,n;return{publicKey:((e=this._wallet)==null?void 0:e.publicKey)||null,address:((t=this._wallet)==null?void 0:t.address)||null,authKey:((n=this._wallet)==null?void 0:n.authKey)||null}}get network(){return{name:this._network,api:this._api,chainId:this._chainId}}get connecting(){return this._connecting}get connected(){var e;return!!((e=this._wallet)!=null&&e.isConnected)}get readyState(){return this._readyState}async connect(){try{if(this.connected||this.connecting)return;if(!(this._readyState===s.Loadable||this._readyState===s.Installed))throw new _;this._connecting=!0;const e=this._provider||window.spika;await(e==null?void 0:e.isConnected());const t=await(e==null?void 0:e.connect());(t==null?void 0:t.publicKey)!==void 0?this._wallet={publicKey:t==null?void 0:t.publicKey,address:t==null?void 0:t.account,authKey:t==null?void 0:t.authKey,isConnected:!0}:this._wallet={isConnected:!1},this.emit("connect",this._wallet.publicKey)}catch(e){throw this.emit("error",e),e}finally{this._connecting=!1}}async disconnect(){if(this._wallet){this._wallet=null;try{const t=this._provider||window.spika;await(t==null?void 0:t.disconnect())}catch(t){this.emit("error",new I(t==null?void 0:t.message,t))}}this.emit("disconnect")}async signTransaction(e,t){try{const n=this._wallet,a=this._provider||window.spika;if(!n||!a)throw new c;const o=await(a==null?void 0:a.signTransaction(e,t));if(o)return o;throw new Error("Sign Transaction failed")}catch(n){const a=n.message;throw this.emit("error",new v(a)),n}}async signAndSubmitTransaction(e,t){try{const n=this._wallet,a=this._provider||window.spika;if(!n||!a)throw new c;const o=await(a==null?void 0:a.signAndSubmitTransaction(e,t));if(o)return o;throw new Error("Transaction failed")}catch(n){const a=n.message;throw this.emit("error",new y(a)),n}}async signMessage(e){try{const t=this._wallet,n=this._provider||window.spika;if(!t||!n)throw new c;const a=await(n==null?void 0:n.signMessage(e));if(a)return a;throw new Error("Sign Message failed")}catch(t){const n=t.message;throw this.emit("error",new m(n)),t}}async onAccountChange(){try{const e=this._wallet,t=this._provider||window.spika;if(!e||!t)throw new c}catch(e){const t=e.message;throw this.emit("error",new A(t)),e}}async onNetworkChange(){try{const e=this._wallet,t=this._provider||window.spika;if(!e||!t)throw new c}catch(e){const t=e.message;throw this.emit("error",new E(t)),e}}}function _t(){const l=q(),h=R(()=>l),e=U(),t=R(()=>e),n=[new st,new tt,new ct,new nt,new ot,new ht,new wt,new J],a=[new Y,new O],o=Q({wallet:{}}),i=P(!1),d=P(""),{$notify:g}=V(),{t:T,locale:M}=X();return{account:d,isConnected:i,currentWallet:o,connect:async(k,L="Aptos")=>{var W,H,B;const j=L==="Sui"?a:n;l.setSwitchWallet(!1);const p=j.find(b=>b.name.indexOf(k)>-1);if(p){if(l.walletName==p.name)return!1;try{const b=await p.connect();o.wallet=p;let D,S="";if(t.value.chainName==="Sui"){const N=await p.getAccounts();N&&(S=N[0]),D=!!S}else S=((H=(W=o==null?void 0:o.wallet)==null?void 0:W.publicAccount)==null?void 0:H.address)||"",D=(B=o==null?void 0:o.wallet)==null?void 0:B.connected;l.setCurrentWallet({wallet:p,isConnected:D,account:S}),localStorage.setItem("cetus-current-wallet",k),g.success({icon:w("svg",{class:{icon:!0},"aria-hidden":!0},[w("use",{"xlink:href":"#icon-icon-change1"})]),duration:4.5,message:w("div",{class:"notification-title"},[w("span",{innerHTML:T("tips.walletConnected")},null)]),class:"ant-notification-copy"})}catch(b){if(b.name==="WalletNotReadyError"){const D=p.url,S=["Please install ",w("a",{href:D,target:"_blank"},`${k} wallet`)," extension first"];g.error({class:"ant-notification-copy ant-notification-error",message:w("div",{class:"notification-title"},[w("span",{innerHTML:b.name},null)]),description:w("div",S),duration:4.5,icon:w("svg",{class:{icon:!0},"aria-hidden":!0},[w("use",{"xlink:href":"#icon-a-icon-Shutdown"})])});return}g.error({class:"ant-notification-copy ant-notification-error",message:w("div",{class:"notification-title"},[w("span",{innerHTML:b.name},null)]),description:"Connect Wallet Failed",duration:4.5,icon:w("svg",{class:{icon:!0},"aria-hidden":!0},[w("use",{"xlink:href":"#icon-a-icon-Shutdown"})])})}}},disconnect:async()=>{if(o.wallet)try{const k=await h.value.currentWallet.disconnect();l.setCurrentWallet(null)}catch{}}}}const gt={default:{primaryColor:"#ff0000",themeColor:"#68FFD8",backgroundColor:"#1f2224",buttonDefault:"#68FFD8",buttonHover:"#A4FFE7",buttonDisabled:"#1e2f2d",buttonDetailDefault:"#181818",buttonDetailHover:"#232323",depositBtnHover:"#1F3635",buttonPositionDefault:"#1E2E2A",buttonPositionHover:"#2D443E",tabActive:"#171717",tabHover:"#191919",tabDefault:"#080808",cardDefault:"#1A1A1A",cardEmphasize:"#202020",cardEnter:"#080808",cardAsset:"linear-gradient(180deg, #1A1A1A, #0F0F0F )",cardTop:"linear-gradient(270deg, #000000 0%, #15332c 100%)",cardTopReserve:"linear-gradient(270deg, #15332c 0%, #000000 100%)",cardCenter:"linear-gradient(270deg, #1b2523 0%, #161717 50%, #1b2523 100%)",cardCenterHover:"linear-gradient(270deg, #283E3A 0%, #161717 50%, #283E3A 100%)",moreBg:"linear-gradient(360deg, #171717 0%, #15332c 100%)",moreBgReserve:"linear-gradient(360deg, #092C2A 0%, #121212 100%)",moreBgReserveHover:"linear-gradient(360deg, #204C50 0%, #121212 100%)",borderGradient:"linear-gradient(180deg, transparent 0%, #83FFE2 50%, transparent 100%)",greenBg:"#192a26",redBg:"#2b181c",textDefault:"#CDCDCD",textDefaultStats:"#7F7F7F",textActive:"#fff",textEffect:"#B5B8C2",textTips:"#FFCA68",textWarning:"#FF6868",borderDefault:"#213F37",redColor:"#ff5073"},sui:{primaryColor:"#76C8FF",themeColor:"#76C8FF",backgroundColor:"#1f2224",buttonDefault:"#76C8FF",buttonHover:"#A4E2FF",buttonDisabled:"#32333B",buttonDetailDefault:"#181818",buttonDetailHover:"#121B1F",depositBtnHover:"#1D3443",buttonPositionDefault:"#1E2E2A",buttonPositionHover:"#2D443E",tabActive:"#181818",tabHover:"#191919",tabDefault:"#080808",cardDefault:"#171717",cardEmphasize:"#1B1B1B",cardEnter:"#0F0F0F",cardAsset:"linear-gradient(180deg, #1A1A1A, #0F0F0F )",cardTop:"linear-gradient(270deg, #000000 0%, #152533 100%)",cardTopReserve:"linear-gradient(270deg, #152533 0%, #000000 100%)",cardCenter:"linear-gradient(270deg, #1B1F25 0%, #161717 52%, #1B2025 100%)",cardCenterHover:"linear-gradient(270deg, #26303C 0%, #161717 52%, #26303C 100%)",moreBg:"linear-gradient(360deg, #171717 0%, #152533 100%)",moreBgReserve:"linear-gradient(360deg, #0E2836 0%, #121212 100%)",moreBgReserveHover:"linear-gradient(360deg, #223857 0%, #121212 100%)",borderGradient:"linear-gradient(180deg, transparent 0%, #76C8FF 52%, transparent 100%)",greenBg:"#192a26",redBg:"#2b181c",redColor:"#ff5073",textDefault:"#CDCDCD",textDefaultStats:"#7F7F7F",textActive:"#fff",textEffect:"#B5B8C2",textTips:"#FFCA68",textWarning:"#FF6868",borderDefault:"#044D70"}};function yt(){const l=U(),h=a=>{for(const o in a)document.getElementsByTagName("body")[0].style.setProperty(`--${o}`,a[o])},e=a=>{localStorage.setItem("theme",a),l.setTheme(a);const o=gt[a];if(o)localStorage.setItem("primaryColor",o.primaryColor),localStorage.setItem("themeColor",o.themeColor),localStorage.setItem("backgroundColor",o.backgroundColor),localStorage.setItem("buttonDefault",o.buttonDefault),localStorage.setItem("buttonHover",o.buttonHover),localStorage.setItem("buttonDisabled",o.buttonDisabled),localStorage.setItem("buttonDetailDefault",o.buttonDetailDefault),localStorage.setItem("buttonDetailHover",o.buttonDetailHover),localStorage.setItem("depositBtnHover",o.depositBtnHover),localStorage.setItem("buttonPositionDefault",o.buttonPositionDefault),localStorage.setItem("buttonPositionHover",o.buttonPositionHover),localStorage.setItem("tabActive",o.tabActive),localStorage.setItem("tabHover",o.tabHover),localStorage.setItem("tabDefault",o.tabDefault),localStorage.setItem("cardDefault",o.cardDefault),localStorage.setItem("cardEmphasize",o.cardEmphasize),localStorage.setItem("cardEnter",o.cardEnter),localStorage.setItem("cardAsset",o.cardAsset),localStorage.setItem("cardTop",o.cardTop),localStorage.setItem("cardTopReserve",o.cardTopReserve),localStorage.setItem("cardCenter",o.cardCenter),localStorage.setItem("cardCenterHover",o.cardCenterHover),localStorage.setItem("moreBg",o.moreBg),localStorage.setItem("moreBgReserve",o.moreBgReserve),localStorage.setItem("moreBgReserveHover",o.moreBgReserveHover),localStorage.setItem("borderGradient",o.borderGradient),localStorage.setItem("greenBg",o.greenBg),localStorage.setItem("redBg",o.redBg),localStorage.setItem("redColor",o.redColor),localStorage.setItem("textDefault",o.textDefault),localStorage.setItem("textDefaultStats",o.textDefaultStats),localStorage.setItem("textActive",o.textActive),localStorage.setItem("textEffect",o.textEffect),localStorage.setItem("textTips",o.textTips),localStorage.setItem("textWarning",o.textWarning),localStorage.setItem("borderDefault",o.borderDefault),h(o);else{const i={primaryColor:localStorage.getItem("primaryColor"),backgroundColor:localStorage.getItem("backgroundColor"),themeColor:localStorage.getItem("themeColor"),buttonDefault:localStorage.getItem("buttonDefault"),buttonHover:localStorage.getItem("buttonHover"),buttonDisabled:localStorage.getItem("buttonDisabled"),buttonDetailDefault:localStorage.getItem("buttonDetailDefault"),buttonDetailHover:localStorage.getItem("buttonDetailHover"),depositBtnHover:localStorage.getItem("depositBtnHover"),buttonPositionDefault:localStorage.getItem("buttonPositionDefault"),buttonPositionHover:localStorage.getItem("buttonPositionHover"),tabActive:localStorage.getItem("tabActive"),tabHover:localStorage.getItem("tabHover"),tabDefault:localStorage.getItem("tabDefault"),cardDefault:localStorage.getItem("cardDefault"),cardEmphasize:localStorage.getItem("cardEmphasize"),cardEnter:localStorage.getItem("cardEnter"),cardAsset:localStorage.getItem("cardAsset"),cardTop:localStorage.getItem("cardTop"),cardTopReserve:localStorage.getItem("cardTopReserve"),cardCenter:localStorage.getItem("cardCenter"),cardCenterHover:localStorage.getItem("cardCenterHover"),moreBg:localStorage.getItem("moreBg"),moreBgReserve:localStorage.getItem("moreBgReserve"),moreBgReserveHover:localStorage.getItem("moreBgReserveHover"),borderGradient:localStorage.getItem("borderGradient"),redBg:localStorage.getItem("redBg"),redColor:localStorage.getItem("redColor"),textDefault:localStorage.getItem("textDefault"),textDefaultStats:localStorage.getItem("textDefaultStats"),textActive:localStorage.getItem("textActive"),textEffect:localStorage.getItem("textEffect"),textTips:localStorage.getItem("textTips"),textWarning:localStorage.getItem("textWarning"),borderDefault:localStorage.getItem("borderDefault")};h(i)}};return{seleteDefaultTheme:()=>{e("default")},selectSuiTheme:()=>{e("sui")}}}export{yt as a,_t as u};
